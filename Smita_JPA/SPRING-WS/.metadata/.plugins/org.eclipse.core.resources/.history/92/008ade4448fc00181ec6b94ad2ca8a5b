package com.main;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import com.jp.dao.MyApplDao;
import com.jp.services.MyApplServices;

/*  1. Creation of an application context
 * 	2. The ClassPathXmlApplicationContext refers to config file which is relative to a path on ClassPath.
	3. Beans are being created eagerly by default.
		 Note : To create object lazily, use "lazy-init" attribute iin configurations as true. 
	4. Beans are being created as Singleton by default.
	5.
	
*/	


public class TestSpringFactory {

	public static void main(String[] args) {
		// Create a Spring Context		
		ApplicationContext ctx = new ClassPathXmlApplicationContext ("context.xml");
		
		// Bean is created when the context is getting , as we see it is calling the constructor.
		System.out.println("Context created.");
		MyApplDao dao = (MyApplDao) ctx.getBean("dao");
		System.out.println(dao.hashCode());
		
		MyApplDao dao1 = (MyApplDao) ctx.getBean("dao");  // Spring object is not only creating object but also it is giving you SingleTon pattern as it is singleton is true
		System.out.println(dao.hashCode());
		
		MyApplServices service = (MyApplServices) ctx.getBean("service");
		System.out.println(service.hashCode());
	}

}
