package com.java;

import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

/*
 * 1. Creation of an application context.
 * 2. The ClassPathXmlApplicationContext refers to config file which is relative to a path on ClassPath.
 * 3. Beans are being created eagerly by default.
 * 		To create objects lazily, use 'lazy-init' attribute in configuration.
 * 4. Beans are being created as Singleton by default.
 * 		To create stateful objects use scope as 'prototype'.
 * 
 * 5. Prototypes are always on demand. Nothing like eager creation.
 * 6. By default, it calls Default COnstructor. if does not exists. throws 
 */

public class TestSpringFactory {

	public static void main(String[] args) {
		// Create a Spring Context
		ApplicationContext ctx = new ClassPathXmlApplicationContext("com/java/context.xml");
		
		System.out.println("Context created.");
		MyApplDao dao1 = (MyApplDao)ctx.getBean("dao");
		System.out.println("dao1: " +dao1.hashCode());
		
		MyApplDao dao2 = (MyApplDao)ctx.getBean("dao");
		System.out.println("dao2: " +dao2.hashCode());
		
		MyApplServices service1 = (MyApplServices)ctx.getBean("service");
		System.out.println("service1: "+service1.hashCode());
		
		MyApplServices service2 = (MyApplServices)ctx.getBean("service");
		System.out.println("service2: "+service2.hashCode());
		
		CommonAttributes common = (CommonAttributes)ctx.getBean("commonData");
		System.out.println("common: "+common);
	}

}
