<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>Spring120_MVC_JPA</display-name>
	<welcome-file-list>
		<welcome-file>homePage.hr</welcome-file>
	</welcome-file-list>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring.xml</param-value>
	</context-param>
	<!-- it creates Application context which will work as parent context -->
	<!-- by default refering to applicationContext.cml , hence we changed the 
		name of context.xml to so -->
	<!-- if we dont like this name, we can change it in context param named 
		in 'contextConfigLocation' above -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- it creates WebApplicationContext which works as a child context -->
	<!-- Child context can refer to the beans of the parent context but vice 
		versa not possible. -->
	<!-- by default, it points to appServlet-servlet.xml, if we want to change 
		the name decide it in init param named in 'contextConfigLocation' -->
	<servlet>
		<servlet-name>fcForHr</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springWebHr.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>fcForHr</servlet-name>
		<url-pattern>*.hr</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>fcForFin</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/springWebFin.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>fcForFin</servlet-name>
		<url-pattern>*.fin</url-pattern>
	</servlet-mapping>
</web-app>